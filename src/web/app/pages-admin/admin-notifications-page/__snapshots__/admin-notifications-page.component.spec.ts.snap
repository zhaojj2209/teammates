// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminNotificationsPageComponent should snap when notification edit form expanded 1`] = `
<tm-admin-notifications-page
  NotificationEditFormMode={[Function Object]}
  currentNotificationEditFormMode="0"
  hasNotificationLoadingFailed="false"
  isNotificationEditFormExpanded={[Function Boolean]}
  isNotificationLoading="false"
  notificationEditFormModel={[Function Object]}
  notificationService={[Function NotificationService]}
  notificationsTableRowModels={[Function Array]}
  notificationsTableRowModelsSortBy={[Function Number]}
  notificationsTableRowModelsSortOrder="0"
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  tableComparatorService={[Function TableComparatorService]}
  timezoneService={[Function TimezoneService]}
>
  <h1>
    Notifications
  </h1><p>
    This page allows you to create and manage notifications which are shown to respective target users when they access TEAMMATES.
  </p><div>
    <button
      class="btn btn-success"
      id="btn-add-notification"
    >
      <span>
        <i
          class="fas fa-plus"
        />
         Add New Notification
      </span>
    </button>
  </div><tm-loading-retry>
    <div
      class="margin-top-30px"
    >
      <div>
        <div
          class="alert alert-warning margin-top-30px"
          role="alert"
        >
           You have not created any notifications yet. Use the form above to create a notification. 
        </div>
      </div>
    </div>
    <br />
  </tm-loading-retry>
</tm-admin-notifications-page>
`;

exports[`AdminNotificationsPageComponent should snap when notifications are loading 1`] = `
<tm-admin-notifications-page
  NotificationEditFormMode={[Function Object]}
  currentNotificationEditFormMode="0"
  hasNotificationLoadingFailed="false"
  isNotificationEditFormExpanded="false"
  isNotificationLoading={[Function Boolean]}
  notificationEditFormModel={[Function Object]}
  notificationService={[Function NotificationService]}
  notificationsTableRowModels={[Function Array]}
  notificationsTableRowModelsSortBy={[Function Number]}
  notificationsTableRowModelsSortOrder="0"
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  tableComparatorService={[Function TableComparatorService]}
  timezoneService={[Function TimezoneService]}
>
  <h1>
    Notifications
  </h1><p>
    This page allows you to create and manage notifications which are shown to respective target users when they access TEAMMATES.
  </p><div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-notification"
    >
      <span>
        <i
          class="fas fa-plus"
        />
         Add New Notification
      </span>
    </button>
  </div><tm-loading-retry>
    <div
      class="margin-top-30px"
    >
      <tm-loading-spinner>
        <div
          class="loading-container"
        >
          <div
            class="row spinner-border text-primary"
            role="status"
          />
          <div
            class="row text-secondary"
          >
            Loading...
          </div>
        </div>
      </tm-loading-spinner>
    </div>
    <br />
  </tm-loading-retry>
</tm-admin-notifications-page>
`;

exports[`AdminNotificationsPageComponent should snap when notifications failed to load 1`] = `
<tm-admin-notifications-page
  NotificationEditFormMode={[Function Object]}
  currentNotificationEditFormMode="0"
  hasNotificationLoadingFailed={[Function Boolean]}
  isNotificationEditFormExpanded="false"
  isNotificationLoading={[Function Boolean]}
  notificationEditFormModel={[Function Object]}
  notificationService={[Function NotificationService]}
  notificationsTableRowModels={[Function Array]}
  notificationsTableRowModelsSortBy={[Function Number]}
  notificationsTableRowModelsSortOrder="0"
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  tableComparatorService={[Function TableComparatorService]}
  timezoneService={[Function TimezoneService]}
>
  <h1>
    Notifications
  </h1><p>
    This page allows you to create and manage notifications which are shown to respective target users when they access TEAMMATES.
  </p><div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-notification"
    >
      <span>
        <i
          class="fas fa-plus"
        />
         Add New Notification
      </span>
    </button>
  </div><tm-loading-retry>
    <div
      class="text-center"
    >
      <p
        class="text-muted m-1"
      >
        Failed to load data
      </p>
      <button
        class="btn btn-primary"
      >
        <i
          aria-hidden="true"
          class="fas fa-redo"
        />
        Â Retry
      </button>
    </div>
  </tm-loading-retry>
</tm-admin-notifications-page>
`;

exports[`AdminNotificationsPageComponent should snap with default view 1`] = `
<tm-admin-notifications-page
  NotificationEditFormMode={[Function Object]}
  currentNotificationEditFormMode="0"
  hasNotificationLoadingFailed="false"
  isNotificationEditFormExpanded="false"
  isNotificationLoading={[Function Boolean]}
  notificationEditFormModel={[Function Object]}
  notificationService={[Function NotificationService]}
  notificationsTableRowModels={[Function Array]}
  notificationsTableRowModelsSortBy={[Function Number]}
  notificationsTableRowModelsSortOrder="0"
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  tableComparatorService={[Function TableComparatorService]}
  timezoneService={[Function TimezoneService]}
>
  <h1>
    Notifications
  </h1><p>
    This page allows you to create and manage notifications which are shown to respective target users when they access TEAMMATES.
  </p><div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-notification"
    >
      <span>
        <i
          class="fas fa-plus"
        />
         Add New Notification
      </span>
    </button>
  </div><tm-loading-retry>
    <div
      class="margin-top-30px"
    >
      <tm-loading-spinner>
        <div
          class="loading-container"
        >
          <div
            class="row spinner-border text-primary"
            role="status"
          />
          <div
            class="row text-secondary"
          >
            Loading...
          </div>
        </div>
      </tm-loading-spinner>
    </div>
    <br />
  </tm-loading-retry>
</tm-admin-notifications-page>
`;
